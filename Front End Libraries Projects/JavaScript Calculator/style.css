/*
border: 1px solid black; helpful for seeing the border

CSS styling - viewport
https://www.w3schools.com/cssref/css_units.asp

I used both CSS flexbox and CSS grid here :D
*/

html,
body {
  height: 100%;

  body {
    background-image: url("https://raw.githubusercontent.com/antonwang/antonwang.github.io/master/images/Cannon%20beach%20-%20Oregon.jpg");
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover; /* Resize the background image to cover the entire container, even if it has to stretch the image or cut a little bit off one of the edges */
  }
}

.container-fluid {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.flex-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: #333;
  width: 30vw;
  padding: 40px;
  border-radius: 2em;
}

.outputDisplay {
  background-color: white;
  width: 300px;
  height: 70px;
  padding: 10px;
  margin: 20px;
  font-size: 1.5em;
  border-radius: 2em;
  display: flex;
  justify-content: flex-end;
  /*border: 1px solid black; */
}

#display {
  margin-right: 30px;
}

.grid-container {
  width: 20vw;
  display: grid;
  grid-template-rows: repeat(4, 1fr);
  grid-template-columns: repeat(4, 1fr);
  grid-template-areas:
    "allclear clearentry divide multiply"
    "seven eight nine subtract"
    "four five six add"
    "one two three equals"
    "zero zero decimal equals";
  grid-gap: 10px;

  #clear {
    grid-area: allclear;
  }
  #clear-entry {
    grid-area: clearentry;
  }
  #divide {
    grid-area: divide;
  }
  #multiply {
    grid-area: multiply;
  }
  #seven {
    grid-area: seven;
  }
  #eight {
    grid-area: eight;
  }
  #nine {
    grid-area: nine;
  }
  #substract {
    grid-area: subtract;
  }
  #four {
    grid-area: four;
  }
  #five {
    grid-area: five;
  }
  #six {
    grid-area: six;
  }
  #add {
    grid-area: add;
  }
  #one {
    grid-area: one;
  }
  #two {
    grid-area: two;
  }
  #three {
    grid-area: three;
  }
  #equals {
    grid-area: equals;
  }
  #zero {
    grid-area: zero;
  }
  #decimal {
    grid-area: decimal;
  }
}
